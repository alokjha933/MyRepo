package com.springboot.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.springboot.exception.ResourceNotFoundException;
import com.springboot.model.Employee;
import com.springboot.repository.EmployeeRepository;

@RestController
@CrossOrigin
@RequestMapping("/api/v1/")
public class EmployeeController {
	
	@Autowired
	EmployeeRepository employeeRepository;

	// get All Employee details
	@GetMapping(value = "/employees")
	public List<Employee> getAllEmployees() {
		return employeeRepository.findAll();
	}

	//create Employee
	@PostMapping(value="/employees")
	public Employee addEmployees(@RequestBody Employee employee) {
		return employeeRepository.save(employee);
	}
	
	//get Employee Details by Id
	@GetMapping(value = "/employees/{id}")
	public ResponseEntity<Employee> getEmployeeDtlsById(@PathVariable Long id) {
		Employee employee= employeeRepository.findById(id).orElseThrow(()-> new ResourceNotFoundException("Employee Deatils not avaialble for the entered Id: "+id));
		return ResponseEntity.ok(employee);
	}
	
	// Update Employee Details
	@PutMapping(value="/employees/{id}")
	public ResponseEntity<Employee> updateEmployeeDetails(@PathVariable Long id,@RequestBody Employee employeeDetails) {
		Employee employee= employeeRepository.findById(id).orElseThrow(()-> new ResourceNotFoundException("Employee Deatils not avaialble for the entered Id: "+id));
		employee.setFirstName(employeeDetails.getFirstName());
		employee.setLastName(employeeDetails.getLastName());
		employee.setEmailId(employeeDetails.getEmailId());
		
		Employee updateEmployee=employeeRepository.save(employee);
		
		return ResponseEntity.ok(updateEmployee);
	}
}
